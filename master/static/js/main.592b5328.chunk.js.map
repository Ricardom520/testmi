{"version":3,"sources":["utils/request.js","services/app.js","config/index.js","shared/actions.js","shared/store.js","shared/index.js","App.js","reportWebVitals.js","index.js"],"names":["window","location","href","indexOf","axios","defaults","baseURL","service","create","timeout","withCredentials","headers","interceptors","request","use","req","method","Postdata","qs","stringify","data","error","Promise","reject","response","res","fetchToken","p","a","fetchAgentTicket","config","SUBAPP_DETAIL","process","actions","initGlobalState","store","createStore","state","action","type","test","getTest","dispatch","payload","console","log","App","initAuth","Toast","loading","localStorage","userId","document","cookie","match","isGetUserId","removeItem","authConfig","props","shareConfig","_this","agentConfig","wx","beta","debug","appId","timestamp","nonceStr","signature","jsApiList","ready","onMenuShareAppMessage","corpid","agentid","success","invoke","err_msg","setGlobalState","kind","getCurExternalChat","chatId","showOptionMenu","showAllNonBaseMenuItem","hide","port","this","onGlobalStateChange","prevState","registerMicroApps","name","entry","container","activeRule","id","start","prefetch","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.592b5328.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport qs from 'qs';\r\n\r\nconst CURRENT_URL = window.location.href\r\n// 环境的切换\r\nif (process.env.NODE_ENV == 'development') {\r\n  //测试 \r\n  // axios.defaults.baseURL = 'http://192.168.50.196:8080'\r\n  axios.defaults.baseURL = 'https://bot.planplus.cn'\r\n  // axios.defaults.baseURL = 'https://bot.planplus.cn'\r\n}else if (process.env.NODE_ENV == 'production') {   \r\n  if(CURRENT_URL.indexOf('bot.planplus.cn')>-1){\r\n    axios.defaults.baseURL = 'https://bot.planplus.cn'\r\n  }else{\r\n    axios.defaults.baseURL = 'https://botest.planplus.cn'        \r\n  }\r\n}\r\n\r\nconst service = axios.create({\r\n  timeout: 40000,\r\n  //responseType: 'json',\r\n  withCredentials: false,\r\n  headers: {\r\n    'Content-Type': 'application/x-www-form-urlencoded; charset=utf-8',\r\n  }\r\n})\r\n\r\n// 设置请求拦截器\r\nservice.interceptors.request.use(req=>{\r\n  if (req.method === 'post') {\r\n    let Postdata = qs.stringify(req.data);\r\n    req.data = Postdata;\r\n  } else if (req.method === 'put') {\r\n    let Postdata = qs.stringify(req.data);\r\n    req.data = Postdata;\r\n  }\r\n  return req\r\n}, function (error) {\r\n  return Promise.reject(error);\r\n})\r\n\r\n// 设置响应拦截器\r\nservice.interceptors.response.use(res=>{\r\n  return res.data;\r\n}, function (error) {\r\n  return Promise.reject(error);\r\n})\r\n\r\nexport default service;","import request from '../utils/request';\r\n\r\nexport async function fetchToken(p) {\r\n  return request(`/v1/api/weixin/getToken/xiaolantongxue?uri=${p ? p : window.location.href}`)\r\n}\r\n\r\nexport async function fetchAgentTicket(p) {\r\n  return request(`/v1/api/weixin/getAgentTicket/xiaolantongxue?uri=${p ? p : window.location.href}`)\r\n}","const config = {\r\n  SUBAPP_DETAIL: process.env.REACT_APP_SUBAPP_DETAIL, // 用户详情\r\n};\r\n\r\nexport default config;","import { initGlobalState } from 'qiankun';\r\n\r\nconst initialState = {};\r\nconst actions = initGlobalState(initialState);\r\n\r\nexport default actions;","import { createStore } from 'redux';\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    default:\r\n      return state;\r\n    case \"test\":\r\n      return {\r\n        // ...state,\r\n        test: 1\r\n      }\r\n  }\r\n}\r\n\r\nconst store = createStore(reducer)\r\n\r\nexport default store;","import store from './store';\r\n\r\nclass Shared {\r\n  getTest() {\r\n    const state = store.getTest();\r\n    return state;\r\n  }\r\n\r\n  setTest() {\r\n    store.dispatch({\r\n      type: 'test',\r\n      payload: 123423\r\n    })\r\n  }\r\n}\r\n\r\nconst shared = new Shared();\r\n\r\nexport default shared;","import React from 'react';\nimport { registerMicroApps, start } from 'qiankun';\nimport { Toast } from 'antd-mobile';\nimport { fetchToken, fetchAgentTicket } from './services/app';\nimport config from './config';\nimport actions from './shared/actions';\nimport shared from \"./shared\";\nimport './App.css';\n\nconsole.log(config)\n\nclass App extends React.Component {\n  componentDidMount() {\n    console.log(window.location)\n    \n    if (!window.location.port) {\n      this.initAuth();\n    } else {\n      actions.setGlobalState({userId: 'wmh8DaCgAASVFww5tOAxeqK__a4hTeZw', kind: 2})\n    }\n\n    actions.onGlobalStateChange((state, prevState) => {\n      console.log(\"主应用观察者：token 改变前的值为 \", prevState);\n      console.log(\"主应用观察者：登录状态发生改变，改变后的 token 的值为 \", state);\n    })\n\n    registerMicroApps(\n      [\n        {\n          name: 'brokenSubApp', // 微应用的名称，微应用之间必须确保唯一（微应用中的package.json中的name)\n          entry: config.SUBAPP_DETAIL, // 微应用的入口地址\n          container: '#subapp-container', // 微应用的容器节点选择器\n          activeRule: '/qwDetail', // 微应用的激活规则 --> 相当于路由\n          props: {\n            // shared,\n            id: 123\n          }\n        }\n      ]\n    )\n\n    start({ prefetch: 'all' }) // 启动，配置all则主应用start后即开始所有微应用静态资源\n  }\n\n  initAuth = () => {\n    Toast.loading('加载中...', 0);\n    if (!localStorage.userId || !document.cookie.match('userId')) {\n      window.location.href = 'https://bot.planplus.cn/v1/api/weixin/oauth2/xiaolantongxue?uri=http://127.0.0.1:8080/'\n      localStorage.isGetUserId = '1';\n    } else if (localStorage.isGetUserId === '1') {\n      console.log(window.location)\n      // window.location.href = window.location.href.split('?')[0];\n      localStorage.isGetUserId = '0';\n    } else if (localStorage.userId) {\n      localStorage.removeItem('isGetUserId');\n      this.authConfig(this.props.shareConfig) //调用授权接口调用配置config\n\n      // customerId && this.props.onAuth(customerId, 2)\n    }\n  }\n\n  //授权配置\n  authConfig = async (shareConfig) => {\n    let _this = this;\n    \n    //测试环境开启的测试调用\n    if (process.env.NODE_ENV == 'development') {\n      if( _this.props.onAuth){\n        // otherStore.chatId && _this.props.onAuth(\"wrh8DaCgAAZHLkiGlKihSIjMs9DmAeqQ\", 1)\n        //   !otherStore.chatId && _this.props.onAuth('wmh8DaCgAAgJ0G2D9r1ChNleWwHM-BcQ',2)\n        // _this.props.onAuth('wmh8DaCgAAp2FAJF1qgsbG8z7Db0bpFg') 于鑫\n        // _this.props.onAuth('wmh8DaCgAAo8Z52vlj60nKYgLjKMfNVw')//junting\n        // _this.props.onAuth('wmh8DaCgAAwLWRMkhD5VJkscrvBPhQ1A') // 毕成\n        // _this.props.onAuth('wmh8DaCgAASVFww5tOAxeqK__a4hTeZw') //vincent\n        // _this.props.onAuth('wmh8DaCgAABKES7bBSL3_JAoxSv1owCA') // 陈小姐\n        // _this.props.onAuth('wmh8DaCgAAKU53A2_wBiNYnP5CzhwHIw',2) // 毛球\n        // _this.props.onAuth('wmh8DaCgAARIGaJ7kmGkk2lFdetTCbgQ') // 梅姐\n        // _this.props.onAuth('wmh8DaCgAAWZho9YNdHsgp3cl_oDeKLQ') // 萩萩\n      }\n    }\n\n    let config = await fetchToken() //获取config\n    let agentConfig = await fetchAgentTicket()//获取agentConfig\n    \n    // console.log(config, '========', agentConfig)\n    window.wx.config({\n        beta: true,// 必须这么写，否则window.wx.invoke调用形式的jsapi会有问题\n        debug: false, // 开启调试模式,调用的所有api的返回值会在客户端alert出来，若要查看传入的参数，可以在pc端打开，参数信息会通过log打出，仅在pc端时才会打印。\n        appId: 'ww0503560e67e7f9e6', // 必填，企业微信的corpID\n        timestamp: config.timestamp, // 必填，生成签名的时间戳\n        nonceStr: config.nonceStr, // 必填，生成签名的随机串\n        signature: config.signature,// 必填，签名，见 附录-JS-SDK使用权限签名算法\n        jsApiList: ['selectExternalContact', 'openUserProfile', 'getCurExternalContact', 'sendChatMessage',\n            'playVoice', 'downloadVoice', 'openDefaultBrowser', 'onMenuShareAppMessage'\n        ] // 必填，需要使用的JS接口列表，凡是要调用的接口都需要传进来\n    });\n    window.wx.ready(function () {\n      if (shareConfig) {\n        window.wx.onMenuShareAppMessage(shareConfig);\n      }\n      window.wx.agentConfig({\n        corpid: 'ww0503560e67e7f9e6', // 必填，企业微信的corpid，必须与当前登录的企业一致\n        agentid: '1000011', // 必填，企业微信的[应用id](##14953#agentid)\n        timestamp: agentConfig.timestamp, // 必填，生成签名的时间戳\n        nonceStr: agentConfig.nonceStr, // 必填，生成签名的随机串\n        signature: agentConfig.signature,// 必填，签名，见附录1\n        jsApiList: ['selectExternalContact', 'openUserProfile', 'getCurExternalContact', 'sendChatMessage',\n          'playVoice', 'downloadVoice', 'getCurExternalChat', 'onMenuShareWechat'], //必填\n        success: function (res) {\n          console.log(res)\n          console.log('成功配置configAgent')\n          window.wx.invoke('getCurExternalContact', {\n          }, function (response) {\n            console.log('授权成功:')\n            console.log(response)\n            console.log('getCurExternalContact-', response.err_msg, response.err_msg == \"getCurExternalContact:fail_without context of external contact\")\n            if (response.err_msg == \"getCurExternalContact:ok\") {\n              let userId = response.userId; //返回当前外部联系人userId\n              // store.clientId = userId //客户id\n              // console.log(store.clientId)\n              //调用传过来的connectSocket\n              // if (_this.props.parent) {\n              //     _this.props.parent.connectSocket()\n              // }\n              // if (_this.props.onAuth) {//调用获取用户信息后调用到函数\n              //     _this.props.onAuth(userId, 2)\n              // }\n              actions.setGlobalState({userId, kind: 2}) // kind: 1. 群聊 2. 个人\n            } else if (response.err_msg == \"getCurExternalContact:fail_without context of external contact\" || response.err_msg == \"getCurExternalContact:fail\") {//获取不到联系人\n              _this.getCurExternalChat(chatId => {//获取不到联系人 && 存在群ID 即群聊模式 ；mac 获取不到联系人返回的是这个状态 \"getCurExternalContact:fail_without context of external contact\" window是\"getCurExternalContact:fail\"\n              // _this.notInShow(chatId) //部分页面群聊不显示的页面判断    \n              // otherStore.chatId = chatId\n              // if (_this.props.onAuth) {//调用获取用户信息后调用到函数\n              //         _this.props.onAuth(chatId, 1)//1:群聊 2:个人\n              //     }\n                actions.setGlobalState({chatId, kind: 1}) // kind: 1. 群聊 2. 个人\n              })\n            }\n          })\n        },\n      });\n    })\n    window.wx.showOptionMenu();\n    window.wx.showAllNonBaseMenuItem();\n    Toast.hide()\n  }\n\n  render() {\n    return (\n      <div>\n        <main id=\"subapp-container\" />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport 'antd-mobile/dist/antd-mobile.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}