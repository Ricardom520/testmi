worker_processes 1; # Nginx 进程数，一般设置为和CPU核数一样

events {
  worker_connections 1024; # 每个进程允许最大并发数
}

http {
  include ./mime.types; # 文件扩展名与类型映射表
  default_type application/octet-stream; # 默认文件类型
  server {
    set $root "/usr/share/nginx/root/testMicro";   # 设置静态文件目录的绝对路径，该变量根据个人的项目配置有所不同
    listen 9999; # 配置监听的端口
    server_name localhost; # 配置的域名

    location / {
      root $root/master; # 网站根目录， 这里选用主应用构建后的文件目录
      index index.html; # 默认首页文件
      try_files $uri $uri/ /index.html @rewrites; # 兼容 history 路由模式，找不到的文件直接重定向到 index.html

      expires -1; # 首页一般没有强制缓存
      add_header Cache-Control no-cache;
    }

    location @rewrites {
      rewrite ^(.+)$ /index.html break; # 重定向规则
    }
  }

  server {
    set $root "/usr/share/nginx/root/testMicro";   # 设置静态文件目录的绝对路径，该变量根据个人的项目配置有所不同
  
    listen       10100;   # 配置监听的端口，react 子应用的端口号为 10100
    server_name  localhost;    # 配置的域名，目前是本地测试，所以直接使用 localhost

    location / {
      root   $root/subapp_detail;  # 网站根目录，这里选用 react 子应用构建后的文件目录
      index  index.html;   # 默认首页文件
      try_files  $uri $uri/ /index.html @rewrites;   # 兼容 history 路由模式，找不到的文件直接重定向到 index.html 

      expires -1;                          # 首页一般没有强制缓存
      add_header Cache-Control no-cache;

      add_header "Access-Control-Allow-Origin" $http_origin;   # 全局变量获得当前请求origin，带cookie的请求不支持*
      add_header "Access-Control-Allow-Methods" "*";  # 允许请求方法
      add_header "Access-Control-Allow-Headers" "*";  # 允许请求的 header
    }
    
    location @rewrites {
      rewrite ^(.+)$ /index.html break;   # 重定向规则
    }
  }
}